<%= form_for [@event, package] do |f| %>
<p class="formy">
  <%= f.label :name %>
  <%= f.text_field :name %>
  <% if package.errors.any? %>
  <span class="error_details">
    <%= "Name " + package.errors[:name].join + "." %>
  </span>
  <% end %>
</p>
<p class="formy">
  <%= f.label :price %>
  <%= f.text_field :price %>
</p>
<%= f.submit "Save Package", class: "button generic" %>
<% end %>

<h1>Package Perks</h1>

<table>
  <tr>
    <th>Perk</th>
    <th>Options</th>
  </tr>
  <% @package.specs.each do |spec| %>
  <tr>
    <td><%= spec.perk.name %> <% if spec.qty > 1 %> (<%= spec.qty %>) <% end %></td>
    <td><%= button_to "Delete", spec, method: :delete, class: "button delete small"  %></td>
  </tr>
  <% end %>
</table>

<%= form_for Spec.new do |s| %>
<%= s.hidden_field :package_id, value: @package.id %>
<p>
  <label>Perk <%= s.select(:perk_id, Perk.all.collect { |p| [ p.name, p.id ] }) %>
  </label>
</p>
<p>
  <label> Qty <%= s.number_field :qty, value: 1 %></label>
</p>
<%= s.submit "Add Perk", class: "button generic" %>
<% end %>

<%# # TODO: Add validation of uniqeness with scope, so that you can only add each perk 1 time to each packages
# (if you need multiples, that's what the Qty is for)

<%# FIXME: If you try to add a Perk before you save your package, nothing happens. It should either not let you do it until you saved the other info, or it should give a warning or something.  %>